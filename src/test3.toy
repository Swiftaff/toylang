= fibonacci \ i64 i64 n => ? == n 1 1 + fibonacci - n 1 fibonacci - n 2
fibonacci 1

// example showing toy converted to rust line for line
// = a \ 164 164 n =>       fn fibonacci(n: i64) -> i64 {
// ? < n 2                     if(n < 2) {
// 1                                return 1;
//                              } else {
// + a(- n 1) a(- n 2)              return fibonacci(n - 1) + fibonacci(n - 2);
//                              }
//                          }

// example showing toy with brackets around each function (lispy style)
// = a \ i64 i64 n => (? (== n 1) 1 (+ (a (- n 1)) (a (- n 2))))

// same with line breaks and indents
// = a \ i64 i64 n =>
//   ( ?
//     ( < n 2 )
//     1
//     ( + 
//       ( a 
//         ( - n 1 )
//       )
//       ( a
//         ( - n 2 )
//       )
//     )
//   )