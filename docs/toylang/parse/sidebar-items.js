window.SIDEBAR_ITEMS = {"fn":[["assignment","Parses as assignment"],["comment_single_line","Parses a Comment single line"],["concatenate_vec_strings","Concatenates a vec of tokens, used in a comment"],["constant","Parses a Constant - as a Constant, ConstantRef, Arg, FunctionDef, If - or an error"],["current_line","While loop over the tokens in the current line"],["current_token","Parse token, it’s either an inbuiltFn, Arg, Type or something else"],["float","Parses a Float"],["function_call","Parses a FnCall"],["function_definition_end","Parses end of a FnDef"],["function_definition_start","Parses start of a FnDef"],["functiontypesig_or_functionreference_end","Parses a Fn type signnature, or end of a FnRef"],["functiontypesig_or_functionreference_start","Parses a Fn type signature or start of a fnRef"],["get_args_from_dyn_fn","Gets args from a Dyn Fn, e.g."],["if_expression","Parses a If"],["inbuilt_function_call","Parses an inbuiltFnCall"],["int","Parses an Int"],["is_float","Checks if a Float"],["is_integer","Checks if an Int"],["is_string","Checks if a string"],["list_empty","Parses an empty List"],["list_end","Parses end of a List"],["list_start","Parses start of a List"],["loop_end","Parses end of a Loop for range"],["loop_for_range_start","Parses start of a Loop for range"],["println","Parses a Println"],["string","Parses a String"],["strip_leading_whitespace","Strips leading whitespace from a String"],["strip_trailing_whitespace","Strips trailing whitespace from a String"],["token_by_first_chars","Parses seomthing based on it’s first character, if it’s not been added as an inbuiltFn yet"]]};