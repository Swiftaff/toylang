window.SIDEBAR_ITEMS = {"fn":[["append","Append Element"],["append_as_nth_child_of_elindex","Append to the end of the AST, but add as nth child of an existing element. If n is greater then the number of children, just add to the end."],["assignment","Append Assignment"],["comment_single_line","Append Comment single line"],["constant_ref","Append ConstantRef"],["float","Append Float"],["function_call","Append FnCall"],["function_call1","Append FnCall"],["function_definition_start","Append start of a FnDef"],["function_ref_or_call","Append FnRef or FnCall"],["functiontypesig_or_functionreference_end","Append Fn type signature, or end of a FnRef"],["functiontypesig_or_functionreference_start","Append Fn type signature, or start of a FnRef"],["if_expression","Append If"],["inbuilt_function_call","Append InbuiltFnCall"],["indent_if_first_in_line","Append an indent if this is the first element in the line or if first part of the expression in a single line function (after the colon) e.g. the “+ 123 arg1”  in"],["int","Append Int"],["is_return_expression","Check if the ElementInfo is a return expression"],["list_start","Append start of a list"],["loop_for_range_start","Append start of a loop for range"],["new_constant_or_arg","Append a new constant, or an Argument if within a WIP FnDef"],["outdent_if_last_expected_child","Append outdent, if it is the last expected child of current parent"],["println","Append Println"],["seol_if_last_in_line","Append an SEOL (Semicolon and End of line) if the current element is last in this line"],["string","Append String"],["struct_start","Append start of a struct"],["types","Append the ref as a type as a child of current parent, except if parent is a list you can only have child elements as types to help define the list type in an empty list, e.g. List [ f64 ] so just apply the type to the list now, and DON’T add the type into the AST"]]};