window.SIDEBAR_ITEMS = {"fn":[["get_depths_flattened","Flattens the depths Vec, from bottom (deepest) to top"],["get_depths_vec","Collects a vec of all Ast children in order so that the deepest types are inferred first, so these can inform the inference of their parents types"],["get_output_for_assignment","Output for Assignment"],["get_output_for_element_index","Gets the output string for an element based on its index"],["get_output_for_functioncall","Output for FunctionCall"],["get_output_for_if","Output for If statement"],["get_output_for_inbuiltfncall","Output for InbuiltFnCall"],["get_output_for_list","Output for List"],["get_output_for_parens","Output for Parens"],["get_output_for_println","Output for Println"],["get_output_for_struct","Output for Struct"],["get_premain_output_for_element_index","Gets the output string for an element based on its index - but for the code before the main function"],["get_premain_output_for_struct","Pre-main Output for Struct Should output something like this …"],["indent_and_add_children","indent from current parent and list children to output next"],["is_skippable_due_to_parent","Defines which Elements’ children should be skipped from being output directly, as the children are handled by the parent Element’s output"],["output_end_of_element_and_outdent","outdent from list of children, back to parents next sibling"],["replace_any_unknown_types","Goes through the Ast several times to fill in all the Undefined types"],["set_output","The main function to set the output string from the compiler"],["set_output_append","Append a string to the output string"],["set_output_for_element_close","Append an indented closing bracket for FunctionDef to the output string, or nothing"],["set_output_for_element_open","Append the current element’s formatted string to the output string"],["set_premain_output_append","Append a string to the output string for the premain section"],["set_premain_output_for_element","Append the current element’s formatted string to the output string - but for “premain”, i.e. the output prepended before the main function"]]};