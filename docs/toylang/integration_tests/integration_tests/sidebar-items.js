window.SIDEBAR_ITEMS = {"fn":[["test_pass_assign_type_inf_divide_float","Toylang: “= a / 1.1 2.2”"],["test_pass_assign_type_inf_divide_int","Toylang: “= a / 1 2”"],["test_pass_assign_type_inf_minus_float","Toylang: “= a - 1.1 2.2”"],["test_pass_assign_type_inf_modulo_float","Toylang: “= a % 1.1 2.2”"],["test_pass_assign_type_inf_modulo_int","Toylang: “= a % 1 2”"],["test_pass_assign_type_inf_multiply_float","Toylang: “= a * 1.1 2.2”"],["test_pass_assign_type_inf_multiply_int","Toylang: “= a * 1 2”"],["test_pass_assign_type_inf_plus_float","Toylang: “= a + 1.1 2.2”"],["test_pass_assign_type_inf_plus_int","Toylang: “= a + 1 2”"],["test_pass_assign_type_inf_plus_minus_int","Toylang: “= a - 1 2”"],["test_pass_assignment_arithmetic","Toylang: “= a + 1 2”"],["test_pass_assignment_float","Toylang: “= a 1.1”"],["test_pass_assignment_float_neg","Toylang: “= a -1.7976931348623157E+308”"],["test_pass_assignment_int","Toylang: “= a 1”"],["test_pass_assignment_string","Toylang: “= a \"string\"”"],["test_pass_boolean_eq_equality_false","Toylang: “== 1 2”"],["test_pass_boolean_eq_equality_true","Toylang: “== 1 1”"],["test_pass_boolean_false","Toylang: “false”"],["test_pass_boolean_gt_greater_than_false","Toylang: “> 1 2”"],["test_pass_boolean_gt_greater_than_true","Toylang: “> 2 1”"],["test_pass_boolean_gte_greater_than_equal_false","Toylang: “>= 1 2”"],["test_pass_boolean_gte_greater_than_equal_true","Toylang: “>= 3 2”"],["test_pass_boolean_gte_greater_than_equal_true2","Toylang: “>= 2 2”"],["test_pass_boolean_lt_less_than_false","Toylang: “< 2 1”"],["test_pass_boolean_lt_less_than_true","Toylang: “< 1 2”"],["test_pass_boolean_lte_less_than_equal_false","Toylang: “<= 3 2”"],["test_pass_boolean_lte_less_than_equal_true","Toylang: “<= 2 3”"],["test_pass_boolean_lte_less_than_equal_true2","Toylang: “<= 2 2”"],["test_pass_boolean_neq_non_equality_false","Toylang: “!= 1 1”"],["test_pass_boolean_neq_non_equality_true","Toylang: “!= 1 2”"],["test_pass_boolean_true","Toylang: “true”"],["test_pass_comment_singleline","Toylang: “//comment”"],["test_pass_comment_singleline_fn_no_longer_breaks","Toylang: “//= a \\ i64 => 123”"],["test_pass_comment_singleline_with_space","Toylang: “    //    comment    “"],["test_pass_constant","Toylang: “= a 123\\r\\na”"],["test_pass_empty_file","Toylang: “”"],["test_pass_float","Toylang: “1.1”"],["test_pass_float_longer","Toylang: “123.123”"],["test_pass_float_longer_neg","Toylang: “-123.123”"],["test_pass_float_max1","Toylang: “1234567890.123456789”"],["test_pass_float_max1_neg","Toylang: “-1234567890.123456789”"],["test_pass_float_max2","Toylang: “1.7976931348623157E+308”"],["test_pass_float_max2_neg","Toylang: “-1.7976931348623157E+308”"],["test_pass_float_neg","Toylang: “-1.1”"],["test_pass_float_space_before","Toylang: “    123.123    “"],["test_pass_float_space_before_neg","Toylang: “    -123.123    “"],["test_pass_int","Toylang: “1”"],["test_pass_int_longer","Toylang: “123”"],["test_pass_int_longer_neg","Toylang: “-123”"],["test_pass_int_max","Toylang: “9223372036854775807”"],["test_pass_int_max_neg","Toylang: “-9223372036854775808”"],["test_pass_int_neg","Toylang: “-1”"],["test_pass_int_space_before","Toylang: “    123    “"],["test_pass_int_space_before_neg","Toylang: “    -123    “"],["test_pass_internal_function_calls_divide","Toylang: “/ 9 3”"],["test_pass_internal_function_calls_multiply","Toylang: “* 3 4”"],["test_pass_internal_function_calls_negative","Toylang: “- 1.1 2.2”"],["test_pass_internal_function_calls_plus","Toylang: “+ 1 2”"],["test_pass_list_append","Toylang: “= list1 [ 1 ]\\r\\n= list2 [ 2 3 ]\\r\\n= appended List.append list1 list2”"],["test_pass_list_empty_float","Toylang: “[ f64 ]”"],["test_pass_list_empty_int","Toylang: “[ i64 ]”"],["test_pass_list_empty_string","Toylang: “[ String ]”"],["test_pass_list_float","Toylang: “[ 1.1 2.2 3.3 4.4 5.5 ]”"],["test_pass_list_float_assign","Toylang: “= x [ 1.1 2.2 3.3 4.4 5.5 ]”"],["test_pass_list_int","Toylang: “[ 1 ]”"],["test_pass_list_int2","Toylang: “[ 1 2 3 4 5 ]”"],["test_pass_list_int_assign","Toylang: “= x [ 1 2 3 4 5 ]”"],["test_pass_list_len","Toylang: “= list [ 1 2 3 ]\\r\\n= len List.len list”"],["test_pass_list_map","Toylang: “= list [ 1 ]\\r\\n= mapfn \\ i64 i64 i => * i 100\\r\\n= mapped List.map list ( mapfn )”"],["test_pass_list_string","Toylang: “[ \"1.1\" \"2.2\" \"3.3\" \"4.4\" \"5.5\" ]”"],["test_pass_list_string_assign","Toylang: “= x [ \"1.1\" \"2.2\" \"3.3\" \"4.4\" \"5.5\" ]”"],["test_pass_single_scenario","helper function for tests"],["test_pass_string","Toylang: “\"string\"”"],["test_pass_string_escaped_quote","Toylang: “\"\"”"]],"macro":[["doc_and_int_test",""]]};