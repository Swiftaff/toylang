var searchIndex = JSON.parse('{\
"toylang":{"doc":"Toylang","t":[3,3,3,3,3,6,12,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,12,12,11,12,0,11,12,12,12,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,12,12,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,5,12,12,11,12,11,12,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["Compiler","DebugErrorStack","DebugLinesOfChars","DebugLinesOfTokens","DebugLogs","Tokens","ast","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","compiler_runner","current_line","current_line_token","debug","debug_compiler_history","debug_line","debug_step","debug_step","debug_window_derive","default","error_stack","file","filepath","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","integration_tests","into","into","into","into","into","lines_of_chars","lines_of_tokens","log","logs","new","output","outputdir","run","run_main_tasks","to_owned","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","main","MyData","ToylangDebugger","borrow","borrow","borrow_mut","borrow_mut","change_step_1_get_file","change_step_2_set_lines_of_chars","change_step_3_set_lines_of_tokens","change_step_4_parse_each_line","change_step_5_set_output","change_step_reset","change_step_stop","default","default","fmt","from","from","history","history_max","history_max_update","history_update","into","into","rich_text_input_init","run","step","step_is_resetting","step_is_resetting_update","step_is_running","step_is_running_update","step_max","step_max_update","step_update","try_from","try_from","try_into","try_into","type_id","type_id","doctest_pass_assign_type_inf_divide_float","doctest_pass_assign_type_inf_divide_int","doctest_pass_assign_type_inf_minus_float","doctest_pass_assign_type_inf_modulo_float","doctest_pass_assign_type_inf_modulo_int","doctest_pass_assign_type_inf_multiply_float","doctest_pass_assign_type_inf_multiply_int","doctest_pass_assign_type_inf_plus_float","doctest_pass_assign_type_inf_plus_int","doctest_pass_assign_type_inf_plus_minus_int","doctest_pass_assignment_arithmetic","doctest_pass_assignment_float","doctest_pass_assignment_float_neg","doctest_pass_assignment_int","doctest_pass_assignment_internal_function_calls_with_references","doctest_pass_assignment_string","doctest_pass_boolean_eq_equality_false","doctest_pass_boolean_eq_equality_true","doctest_pass_boolean_false","doctest_pass_boolean_gt_greater_than_false","doctest_pass_boolean_gt_greater_than_true","doctest_pass_boolean_gte_greater_than_equal_false","doctest_pass_boolean_gte_greater_than_equal_true","doctest_pass_boolean_gte_greater_than_equal_true2","doctest_pass_boolean_lt_less_than_false","doctest_pass_boolean_lt_less_than_true","doctest_pass_boolean_lte_less_than_equal_false","doctest_pass_boolean_lte_less_than_equal_true","doctest_pass_boolean_lte_less_than_equal_true2","doctest_pass_boolean_neq_non_equality_false","doctest_pass_boolean_neq_non_equality_true","doctest_pass_boolean_true","doctest_pass_comment_singleline","doctest_pass_comment_singleline_fn_no_longer_breaks","doctest_pass_comment_singleline_with_space","doctest_pass_constant","doctest_pass_empty_file","doctest_pass_float","doctest_pass_float_longer","doctest_pass_float_longer_neg","doctest_pass_float_max1","doctest_pass_float_max1_neg","doctest_pass_float_max2","doctest_pass_float_max2_neg","doctest_pass_float_neg","doctest_pass_float_space_before","doctest_pass_float_space_before_neg","doctest_pass_func_def_multiline1","doctest_pass_func_def_multiline2","doctest_pass_func_def_multiline_const_assign_nested","doctest_pass_func_def_multiline_nested","doctest_pass_func_def_multiline_several_semicolon_and_return","doctest_pass_func_def_singleline1","doctest_pass_func_def_singleline2","doctest_pass_int","doctest_pass_int_longer","doctest_pass_int_longer_neg","doctest_pass_int_max","doctest_pass_int_max_neg","doctest_pass_int_neg","doctest_pass_int_space_before","doctest_pass_int_space_before_neg","doctest_pass_internal_function_calls_divide","doctest_pass_internal_function_calls_multiply","doctest_pass_internal_function_calls_negative","doctest_pass_internal_function_calls_plus","doctest_pass_list_append","doctest_pass_list_empty_float","doctest_pass_list_empty_int","doctest_pass_list_empty_string","doctest_pass_list_float","doctest_pass_list_float_assign","doctest_pass_list_int","doctest_pass_list_int2","doctest_pass_list_int_assign","doctest_pass_list_len","doctest_pass_list_string","doctest_pass_list_string_assign","doctest_pass_nested_internal_function_call1","doctest_pass_nested_internal_function_call2","doctest_pass_nested_internal_function_call3","doctest_pass_passing_func_as_args","doctest_pass_string","doctest_pass_string_escaped_quote","doctest_pass_type_inference_assign_to_constref","doctest_pass_type_inference_assign_to_funccall"],"q":["toylang","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","toylang::compiler_runner","toylang::debug_window_derive","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","toylang::integration_tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","Instructions for using toylang CLI","","","","","","","","A windows app to help with debugging development of Toylang","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Examples for use with the Toylang CLI","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Toylang: “= a / 1.1 2.2”","Toylang: “= a / 1 2”","Toylang: “= a - 1.1 2.2”","Toylang: “= a % 1.1 2.2”","Toylang: “= a % 1 2”","Toylang: “= a * 1.1 2.2”","Toylang: “= a * 1 2”","Toylang: “= a + 1.1 2.2”","Toylang: “= a + 1 2”","Toylang: “= a - 1 2”","Toylang: “= a + 1 2”","Toylang: “= a 1.1”","Toylang: “= a -1.7976931348623157E+308”","Toylang: “= a 1”","Toylang: “= a + 1 2\\\\r\\\\n= b - 3 a”","Toylang: “= a &quot;string&quot;”","Toylang: “== 1 2”","Toylang: “== 1 1”","Toylang: “false”","Toylang: “&gt; 1 2”","Toylang: “&gt; 2 1”","Toylang: “&gt;= 1 2”","Toylang: “&gt;= 3 2”","Toylang: “&gt;= 2 2”","Toylang: “&lt; 2 1”","Toylang: “&lt; 1 2”","Toylang: “&lt;= 3 2”","Toylang: “&lt;= 2 3”","Toylang: “&lt;= 2 2”","Toylang: “!= 1 1”","Toylang: “!= 1 2”","Toylang: “true”","Toylang: “//comment”","Toylang: “//= a \\\\ i64 =&gt; 123”","Toylang: “    //    comment    “","Toylang: “= a 123\\\\r\\\\na”","Toylang: “”","Toylang: “1.1”","Toylang: “123.123”","Toylang: “-123.123”","Toylang: “1234567890.123456789”","Toylang: “-1234567890.123456789”","Toylang: “1.7976931348623157E+308”","Toylang: “-1.7976931348623157E+308”","Toylang: “-1.1”","Toylang: “    123.123    “","Toylang: “    -123.123    “","Toylang: “= a \\\\ i64 i64 i64 arg1 arg2 =&gt;\\\\r\\\\n+ arg1 arg2…","Toylang: “= a \\\\ i64 i64 i64 i64 arg1 arg2 arg3 =&gt;\\\\r\\\\n= x …","Toylang: “= a \\\\ i64 i64 i64 arg1 arg2 =&gt;\\\\r\\\\n= arg3 + …","Toylang: “= a \\\\ i64 i64 i64 i64 arg1 arg2 arg3 =&gt;\\\\r\\\\n + …","Toylang: “= a \\\\ i64 i64 i64 arg1 arg2 =&gt;\\\\r\\\\n= b + arg1 …","Toylang: “= a \\\\ i64 =&gt; 123”","Toylang: “= a \\\\ i64 i64 arg1 =&gt; + 123 arg1”","Toylang: “1”","Toylang: “123”","Toylang: “-123”","Toylang: “9223372036854775807”","Toylang: “-9223372036854775808”","Toylang: “-1”","Toylang: “    123    “","Toylang: “    -123    “","Toylang: “/ 9 3”","Toylang: “* 3 4”","Toylang: “- 1.1 2.2”","Toylang: “+ 1 2”","Toylang: “= list1 [ 1 ]\\\\r\\\\n= list2 [ 2 3 ]\\\\r\\\\n= appended …","Toylang: “f64”","Toylang: “i64”","Toylang: “String”","Toylang: “[ 1.1 2.2 3.3 4.4 5.5 ]”","Toylang: “= x [ 1.1 2.2 3.3 4.4 5.5 ]”","Toylang: “[ 1 ]”","Toylang: “[ 1 2 3 4 5 ]”","Toylang: “= x [ 1 2 3 4 5 ]”","Toylang: “= list [ 1 2 3 ]\\\\r\\\\n= len List.len list”","Toylang: “[ &quot;1.1&quot; &quot;2.2&quot; &quot;3.3&quot; &quot;4.4&quot; &quot;5.5&quot; ]”","Toylang: “= x [ &quot;1.1&quot; &quot;2.2&quot; &quot;3.3&quot; &quot;4.4&quot; &quot;5.5&quot; ]”","Toylang: “= a - + 1 2 3”","Toylang: “= a / * - + 1 2 3 4 5”","Toylang: “= a + 1 * 3 2”","Toylang: “= a \\\\ ( i64 i64 ) i64 i64 arg1 arg2 =&gt;\\\\r\\\\n …","Toylang: “&quot;string&quot;”","Toylang: “&quot;&quot;”","Toylang: “= a 123\\\\r\\\\n= aa a\\\\r\\\\n= aaa aa\\\\r\\\\n= aaaa aaa”","Toylang: “= a + 1 2”"],"i":[0,0,0,0,0,0,1,3,6,7,8,1,3,6,7,8,1,1,1,0,1,1,1,1,1,1,1,0,1,1,1,1,3,6,7,8,1,3,6,7,8,1,0,3,6,7,8,1,1,1,1,1,1,1,1,1,1,1,3,6,7,8,1,3,6,7,8,1,3,6,7,8,1,0,0,0,17,16,17,16,16,16,16,16,16,16,16,17,16,17,17,16,17,17,17,17,17,16,16,0,17,17,17,17,17,17,17,17,17,16,17,16,17,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],0,0,0,0,0,0,[[1,2],2],0,0,[[],1],0,0,0,[[3,4],5],[[6,4],5],[[7,4],5],[[8,4],5],[[1,4],5],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],0,0,[[1,9]],0,[[9,10,[11,[9]],10],[[12,[1,9]]]],0,0,[1,[[12,[[14,[13]]]]]],[1,12],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],15],[[],15],[[],15],[[],15],[[],15],[[9,10,[11,[9]],10]],0,0,[[]],[[]],[[]],[[]],[16],[16],[16],[16],[16],[16],[16],[[],17],[[],16],[[17,4],5],[[]],[[]],0,0,[[17,9]],[[17,18]],[[]],[[]],[16],[[9,10,[11,[9]]]],0,0,[[17,10]],0,[[17,10]],0,[[17,2]],[[17,2]],[[],12],[[],12],[[],12],[[],12],[[],15],[[],15],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Compiler"],[15,"usize"],[3,"DebugErrorStack"],[3,"Formatter"],[6,"Result"],[3,"DebugLogs"],[3,"DebugLinesOfChars"],[3,"DebugLinesOfTokens"],[3,"String"],[15,"bool"],[4,"Option"],[4,"Result"],[8,"Error"],[3,"Box"],[3,"TypeId"],[3,"ToylangDebugger"],[3,"MyData"],[3,"Vec"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
